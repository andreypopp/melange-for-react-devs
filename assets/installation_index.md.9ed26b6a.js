import{_ as s,o as a,c as e,Q as n}from"./chunks/framework.c1a7e1cf.js";const m=JSON.parse('{"title":"Installation","description":"","frontmatter":{},"headers":[],"relativePath":"installation/index.md","filePath":"installation/index.md"}'),o={name:"installation/index.md"},l=n(`<h1 id="installation" tabindex="-1">Installation <a class="header-anchor" href="#installation" aria-label="Permalink to &quot;Installation&quot;">​</a></h1><h2 id="prerequisites" tabindex="-1">Prerequisites <a class="header-anchor" href="#prerequisites" aria-label="Permalink to &quot;Prerequisites&quot;">​</a></h2><ul><li>You are running a Unix system <ul><li>Windows users are encouraged to install <a href="https://learn.microsoft.com/en-us/windows/wsl/" target="_blank" rel="noreferrer">Windows Subsystem for Linux</a></li></ul></li><li>You have a recent version of, and know how to use: <ul><li><a href="https://nodejs.org/" target="_blank" rel="noreferrer">Node.js</a></li><li><a href="https://git-scm.com/" target="_blank" rel="noreferrer">git</a></li><li>A code editor such as <a href="https://code.visualstudio.com/" target="_blank" rel="noreferrer">Visual Studio Code</a><ul><li>There are also <a href="https://melange.re/v2.1.0/getting-started/#editor-integration" target="_blank" rel="noreferrer">many other editors</a> which can support OCaml</li></ul></li></ul></li></ul><h2 id="opam" tabindex="-1">Opam <a class="header-anchor" href="#opam" aria-label="Permalink to &quot;Opam&quot;">​</a></h2><p>We need <a href="https://opam.ocaml.org/" target="_blank" rel="noreferrer">opam</a>, the OCaml Package Manager. There are many ways to install it depending on your platform, but let’s go with the simplest method:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">bash</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-c</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;sh &lt;(curl -fsSL https://raw.githubusercontent.com/ocaml/opam/master/shell/install.sh)&quot;</span></span>
<span class="line"><span style="color:#B392F0;">opam</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">init</span></span>
<span class="line"><span style="color:#79B8FF;">eval</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">$(</span><span style="color:#B392F0;">opam</span><span style="color:#9ECBFF;"> env)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">bash</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-c</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;sh &lt;(curl -fsSL https://raw.githubusercontent.com/ocaml/opam/master/shell/install.sh)&quot;</span></span>
<span class="line"><span style="color:#6F42C1;">opam</span><span style="color:#24292E;"> </span><span style="color:#032F62;">init</span></span>
<span class="line"><span style="color:#005CC5;">eval</span><span style="color:#24292E;"> </span><span style="color:#032F62;">$(</span><span style="color:#6F42C1;">opam</span><span style="color:#032F62;"> env)</span></span></code></pre></div><p>While <code>opam init</code> is running, it will prompt you with something like</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">Do you want opam to modify ~/.profile?</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">Do you want opam to modify ~/.profile?</span></span></code></pre></div><p>Type <code>y</code> to agree.</p><p>After the installation completes, run</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">opam --version</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">opam --version</span></span></code></pre></div><p>to verify that it succeeded.</p><h2 id="download-and-run-the-starter-project" tabindex="-1">Download and run the starter project <a class="header-anchor" href="#download-and-run-the-starter-project" aria-label="Permalink to &quot;Download and run the starter project&quot;">​</a></h2><p>Let’s make sure that everything works by downloading and running our project template <a href="https://github.com/melange-re/melange-for-react-devs" target="_blank" rel="noreferrer">melange-for-react-devs</a>.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">clone</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">https://github.com/melange-re/melange-for-react-devs</span></span>
<span class="line"><span style="color:#79B8FF;">cd</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">melange-for-react-devs</span></span>
<span class="line"><span style="color:#B392F0;">make</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">init</span></span>
<span class="line"><span style="color:#B392F0;">make</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">build</span></span>
<span class="line"><span style="color:#B392F0;">make</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">serve</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">clone</span><span style="color:#24292E;"> </span><span style="color:#032F62;">https://github.com/melange-re/melange-for-react-devs</span></span>
<span class="line"><span style="color:#005CC5;">cd</span><span style="color:#24292E;"> </span><span style="color:#032F62;">melange-for-react-devs</span></span>
<span class="line"><span style="color:#6F42C1;">make</span><span style="color:#24292E;"> </span><span style="color:#032F62;">init</span></span>
<span class="line"><span style="color:#6F42C1;">make</span><span style="color:#24292E;"> </span><span style="color:#032F62;">build</span></span>
<span class="line"><span style="color:#6F42C1;">make</span><span style="color:#24292E;"> </span><span style="color:#032F62;">serve</span></span></code></pre></div><p>While <code>make init</code> is running, consider grabbing some coffee or other beverage, as it might take a while to fetch all the dependencies and build them. The last command, <code>make serve</code>, should open a tab in your default browser which points to <a href="http://localhost:8080/" target="_blank" rel="noreferrer
noopener">http://localhost:8080/</a> and shows you a typical “Hello World” page. If you see this page, then the project was successfully installed!</p><h2 id="visual-studio-code-extension" tabindex="-1">Visual Studio Code Extension <a class="header-anchor" href="#visual-studio-code-extension" aria-label="Permalink to &quot;Visual Studio Code Extension&quot;">​</a></h2><ol><li>Open the Extensions tab in Visual Studio Code and search for “ocaml”.</li><li>Install the <a href="https://marketplace.visualstudio.com/items?itemName=ocamllabs.ocaml-platform" target="_blank" rel="noreferrer">OCaml Platform</a> extension from OCaml Labs.</li><li>To verify that the extension worked, open the melange-for-react-devs project in Visual Studio Code. OCaml code should be syntax highlighted, and you should see type annotations when you hover over variables.</li><li>To enable auto-formatting, open your <a href="https://code.visualstudio.com/docs/getstarted/settings#_settingsjson" target="_blank" rel="noreferrer">User Settings JSON file</a> and add this snippet:</li></ol><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#9ECBFF;">&quot;[reason]&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;editor.formatOnSave&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;editor.defaultFormatter&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;ocamllabs.ocaml-platform&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#032F62;">&quot;[reason]&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;editor.formatOnSave&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;editor.defaultFormatter&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;ocamllabs.ocaml-platform&quot;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div>`,19),t=[l];function p(r,i,c,d,h,u){return a(),e("div",null,t)}const g=s(o,[["render",p]]);export{m as __pageData,g as default};
